{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web dev\\\\practiceReact\\\\anime\\\\src\\\\Episodes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport delayAdapterEnhancer from 'axios-delay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Episodes = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  let url = `https://api.jikan.moe/v3/anime/${id}/episodes`;\n  const [episodes, setEpisodes] = useState([]);\n  const [cancelToken, setCancelToken] = useState();\n  const api = axios.create({\n    adapter: delayAdapterEnhancer(axios.defaults.adapter)\n  });\n  useEffect(() => {\n    (async function () {\n      try {\n        if (typeof cancelToken != typeof undefined) cancelToken.cancel(\"Canceling previous req\");\n        setCancelToken(axios.CancelToken.source());\n        const res = await api.get(url, {\n          cancelToken: cancelToken.token,\n          delay: 2000\n        });\n        setEpisodes(res.data.episodes);\n        console.log(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"episode-list\",\n    children: episodes.map(episode => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"episode\",\n        children: episode.title\n      }, episode.episode_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 46\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Episodes, \"XKi7EwFkYmIH9LnHrAk2ab9ZktA=\");\n\n_c = Episodes;\nexport default Episodes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episodes\");","map":{"version":3,"sources":["C:/Web dev/practiceReact/anime/src/Episodes.js"],"names":["React","useState","useEffect","axios","delayAdapterEnhancer","Episodes","id","url","episodes","setEpisodes","cancelToken","setCancelToken","api","create","adapter","defaults","undefined","cancel","CancelToken","source","res","get","token","delay","data","console","log","err","map","episode","title","episode_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,aAAjC;;;AAEA,MAAMC,QAAQ,GAAG,QAAU;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AACvB,MAAIC,GAAG,GAAE,kCAAiCD,EAAG,WAA7C;AAEA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AAGA,QAAMW,GAAG,GAAGT,KAAK,CAACU,MAAN,CAAa;AACrBC,IAAAA,OAAO,EAAEV,oBAAoB,CAACD,KAAK,CAACY,QAAN,CAAeD,OAAhB;AADR,GAAb,CAAZ;AAKAZ,EAAAA,SAAS,CAAC,MACV;AACI,KAAC,kBACD;AAEI,UAAG;AACC,YAAI,OAAOQ,WAAP,IAAsB,OAAOM,SAAjC,EAA4CN,WAAW,CAACO,MAAZ,CAAmB,wBAAnB;AAC5CN,QAAAA,cAAc,CAACR,KAAK,CAACe,WAAN,CAAkBC,MAAlB,EAAD,CAAd;AAEA,cAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,GAAJ,CAAQd,GAAR,EAAa;AAACG,UAAAA,WAAW,EAAEA,WAAW,CAACY,KAA1B;AAAiCC,UAAAA,KAAK,EAAE;AAAxC,SAAb,CAAlB;AACAd,QAAAA,WAAW,CAACW,GAAG,CAACI,IAAJ,CAAShB,QAAV,CAAX;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACI,IAAhB;AACH,OAPD,CAQA,OAAMG,GAAN,EACA;AACIF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH;AAEJ,KAhBD;AAiBH,GAnBQ,EAmBN,CAACpB,GAAD,CAnBM,CAAT;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACKC,QAAQ,CAACoB,GAAT,CAAcC,OAAD,IAAW;AAAC,0BAAO;AAA8B,QAAA,SAAS,EAAC,SAAxC;AAAA,kBAAmDA,OAAO,CAACC;AAA3D,SAAUD,OAAO,CAACE,UAAlB;AAAA;AAAA;AAAA;AAAA,cAAP;AAA+E,KAAxG;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtCD;;GAAM1B,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport delayAdapterEnhancer from 'axios-delay';\r\n\r\nconst Episodes = ({id}) => {\r\n    let url=`https://api.jikan.moe/v3/anime/${id}/episodes`;\r\n\r\n    const [episodes, setEpisodes] = useState([]);\r\n    const [cancelToken, setCancelToken] = useState();\r\n\r\n\r\n    const api = axios.create({\r\n        adapter: delayAdapterEnhancer(axios.defaults.adapter)\r\n      });\r\n\r\n\r\n    useEffect(() =>\r\n    {\r\n        (async function()\r\n        {\r\n\r\n            try{\r\n                if (typeof cancelToken != typeof undefined) cancelToken.cancel(\"Canceling previous req\");\r\n                setCancelToken(axios.CancelToken.source());\r\n\r\n                const res = await api.get(url, {cancelToken: cancelToken.token, delay: 2000});\r\n                setEpisodes(res.data.episodes);\r\n                console.log(res.data);\r\n            }\r\n            catch(err)\r\n            {\r\n                console.log(err);\r\n            }\r\n\r\n        })();\r\n    }, [url])\r\n\r\n    return (\r\n        <div className=\"episode-list\">\r\n            {episodes.map((episode)=>{return <div key={episode.episode_id} className=\"episode\">{episode.title}</div>})}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Episodes;\r\n"]},"metadata":{},"sourceType":"module"}