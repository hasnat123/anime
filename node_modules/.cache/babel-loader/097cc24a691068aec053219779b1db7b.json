{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web dev\\\\practiceReact\\\\anime\\\\src\\\\Rating.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rating = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  let url = `https://api.jikan.moe/v3/anime/${id}/stats`;\n  const [ratings, setRatings] = useState([]);\n  useEffect(() => {\n    (async function () {\n      try {\n        const res = await axios.get(url); //storing ratings into array\n\n        setRatings(Object.values(res.data.scores)); //Converting object into array so that 'map' function can be applied\n\n        console.log(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ratings-chart\",\n    children: [ratings.map((rating, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ratings-chart-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-number\",\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar-chart-box\",\n              style: {\n                width: `${rating.percentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-percentage\",\n              children: [rating.percentage, \" %\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-vote\",\n            children: rating.votes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 51\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ratings-chart-data headings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Votes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Rating, \"IiED+GueRxEMJX8BaEWtbrXwBwk=\", false, function () {\n  return [useParams];\n});\n\n_c = Rating;\nexport default Rating;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"sources":["C:/Web dev/practiceReact/anime/src/Rating.js"],"names":["React","useState","useEffect","axios","useParams","Rating","id","url","ratings","setRatings","res","get","Object","values","data","scores","console","log","err","map","rating","i","width","percentage","votes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AAEA,MAAIG,GAAG,GAAE,kCAAiCD,EAAG,QAA7C;AAEA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAC,MACV;AACI,KAAC,kBACD;AAEI,UAAG;AACC,cAAMQ,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUJ,GAAV,CAAlB,CADD,CAIC;;AACAE,QAAAA,UAAU,CAACG,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACI,IAAJ,CAASC,MAAvB,CAAD,CAAV,CALD,CAK6C;;AAC5CC,QAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACI,IAAhB;AAGH,OATD,CAUA,OAAMI,GAAN,EACA;AACIF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH;AAEJ,KAlBD;AAmBH,GArBQ,EAqBN,CAACX,GAAD,CArBM,CAAT;AAyBA,sBACQ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACKC,OAAO,CAACW,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAa;AAAC,0BAAO;AAAa,QAAA,SAAS,EAAC,QAAvB;AAAA,+BAC9B;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,wBAAgCA,CAAC,GAAG;AAApC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,eAAf;AAA+B,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAG,GAAEF,MAAM,CAACG,UAAW;AAA7B;AAAtC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,yBAAoCH,MAAM,CAACG,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BH,MAAM,CAACI;AAArC;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAD8B,SAAUH,CAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AAWpB,KAXN,CADL,eAaI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,8BACI;AAAA,+BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAqBH,CAtDD;;GAAMhB,M;UACaD,S;;;KADbC,M;AAwDN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Rating = () => {\r\n    const { id } = useParams();\r\n\r\n    let url=`https://api.jikan.moe/v3/anime/${id}/stats`;\r\n\r\n    const [ratings, setRatings] = useState([]);\r\n\r\n\r\n    useEffect(() =>\r\n    {\r\n        (async function()\r\n        {\r\n\r\n            try{\r\n                const res = await axios.get(url);\r\n\r\n\r\n                //storing ratings into array\r\n                setRatings(Object.values(res.data.scores)); //Converting object into array so that 'map' function can be applied\r\n                console.log(res.data);\r\n\r\n                \r\n            }\r\n            catch(err)\r\n            {\r\n                console.log(err);\r\n            }\r\n\r\n        })();\r\n    }, [url])\r\n\r\n\r\n\r\n    return (\r\n            <div className=\"ratings-chart\">\r\n                {ratings.map((rating, i)=>{return <div key={i} className=\"rating\">\r\n                    <div className=\"ratings-chart-data\">\r\n                        <div className=\"bar-chart\">\r\n                            <div className=\"rating-number\">{i + 1}</div>\r\n                            <div className=\"bar-chart-box\" style={{width: `${rating.percentage}%`}}></div>\r\n                            <div className=\"rating-percentage\">{rating.percentage} %</div>\r\n                        </div>\r\n\r\n                        <div className=\"rating-vote\">{rating.votes}</div>\r\n                    </div>\r\n\r\n                </div>})}\r\n                <div className=\"ratings-chart-data headings\">\r\n                    <div><h4>Rating</h4></div>\r\n                    <div><h4>Votes</h4></div>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Rating;\r\n"]},"metadata":{},"sourceType":"module"}