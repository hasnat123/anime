{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web dev\\\\practiceReact\\\\anime\\\\src\\\\ReviewContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Slice } from './helpers/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReviewContent = _ref => {\n  _s();\n\n  let {\n    review,\n    id\n  } = _ref;\n  const [toggleReview, setToggleReview] = useState(true);\n  const [width, setWidth] = useState();\n\n  const handleToggleReview = function () {\n    setToggleReview(!toggleReview);\n  };\n\n  useEffect(() => {\n    (async function () {\n      try {\n        setWidth(window.innerWidth);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-content\",\n    children: [review.review.length > 700 + review.review.slice(700).indexOf(\" \") ? toggleReview ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [Slice(review.review, 700), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"read-more\",\n        onClick: handleToggleReview,\n        children: \"Read More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 127\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [review.review, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"read-more\",\n        onClick: handleToggleReview,\n        children: \"Read Less\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 224\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: review.review\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: width\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ReviewContent, \"dw7KftQNT90P0lnBLE6TjpOU6Zg=\");\n\n_c = ReviewContent;\nexport default ReviewContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewContent\");","map":{"version":3,"sources":["C:/Web dev/practiceReact/anime/src/ReviewContent.js"],"names":["React","useState","useEffect","Slice","ReviewContent","review","id","toggleReview","setToggleReview","width","setWidth","handleToggleReview","window","innerWidth","err","console","log","length","slice","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,QAAsB,mBAAtB;;;;AAEA,MAAMC,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAiB;AAEpC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;;AAEA,QAAMU,kBAAkB,GAAG,YAC3B;AACIH,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH,GAHD;;AAKAL,EAAAA,SAAS,CAAC,MACV;AACI,KAAC,kBACD;AACI,UACA;AACIQ,QAAAA,QAAQ,CAACE,MAAM,CAACC,UAAR,CAAR;AAEH,OAJD,CAKA,OAAMC,GAAN,EACA;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAXD;AAaH,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACKT,MAAM,CAACA,MAAP,CAAcY,MAAd,GAAuB,MAAMZ,MAAM,CAACA,MAAP,CAAca,KAAd,CAAoB,GAApB,EAAyBC,OAAzB,CAAiC,GAAjC,CAA7B,GAAsEZ,YAAY,gBAAG;AAAA,iBAAGJ,KAAK,CAACE,MAAM,CAACA,MAAR,EAAgB,GAAhB,CAAR,oBAA8B;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEM,kBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA9B;AAAA,oBAAH,gBAAgH;AAAA,iBAAGN,MAAM,CAACA,MAAV,oBAAkB;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEM,kBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB;AAAA,oBAAlM,gBAAoS;AAAA,gBAAGN,MAAM,CAACA;AAAV,qBADzS,eAEI;AAAA,gBAAII;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMH,CAjCD;;GAAML,a;;KAAAA,a;AAmCN,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Slice } from './helpers/helpers';\r\n\r\nconst ReviewContent = ({review, id}) => {\r\n\r\n    const [toggleReview, setToggleReview] = useState(true);\r\n    const [width, setWidth] = useState();\r\n\r\n    const handleToggleReview = function()\r\n    {\r\n        setToggleReview(!toggleReview);\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        (async function()\r\n        {\r\n            try\r\n            {\r\n                setWidth(window.innerWidth);\r\n\r\n            }\r\n            catch(err)\r\n            {\r\n                console.log(err);\r\n            }\r\n        })();\r\n  \r\n    }, [])\r\n\r\n    return (\r\n      <div className='review-content'>\r\n          {review.review.length > 700 + review.review.slice(700).indexOf(\" \") ? (toggleReview ? <>{Slice(review.review, 700)} <span className=\"read-more\" onClick={handleToggleReview}>Read More</span></> : <>{review.review} <span className=\"read-more\" onClick={handleToggleReview}>Read Less</span></>) : <>{review.review}</>}     \r\n          <p>{width}</p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ReviewContent"]},"metadata":{},"sourceType":"module"}