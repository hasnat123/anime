{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web dev\\\\practiceReact\\\\anime\\\\src\\\\Cast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport delayAdapterEnhancer from 'axios-delay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cast = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  let url = `https://api.jikan.moe/v3/anime/${id}/characters_staff`;\n  const [cast, setCast] = useState([]);\n  const [actors, setActors] = useState([]);\n  const [actorsImage, setActorsImage] = useState([]);\n  const api = axios.create({\n    adapter: delayAdapterEnhancer(axios.defaults.adapter)\n  });\n  let cancelToken;\n  useEffect(() => {\n    (async function () {\n      try {\n        if (typeof cancelToken != typeof undefined) cancelToken.cancel(\"Canceling previous req\");\n        cancelToken = axios.CancelToken.source();\n        const res = await api.get(url, {\n          cancelToken: cancelToken.token,\n          delay: 8000\n        });\n        setCast(res.data.characters);\n        res.data.characters.map((actor, i) => actor.language.includes(\"Japanese\") ? actors.push(actor) : null);\n        console.log(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cast\",\n    children: cast.map((character, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-name\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-pic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: character.image_url,\n            alt: \"character-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), actors.map((actor, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actor-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actor-name\",\n          children: actors.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actor-pic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: actors.image_url,\n            alt: \"actor-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cast, \"SOU9joU6RtNGp9tyqUXFsm90aB0=\");\n\n_c = Cast;\nexport default Cast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"sources":["C:/Web dev/practiceReact/anime/src/Cast.js"],"names":["React","useEffect","useState","axios","delayAdapterEnhancer","Cast","id","url","cast","setCast","actors","setActors","actorsImage","setActorsImage","api","create","adapter","defaults","cancelToken","undefined","cancel","CancelToken","source","res","get","token","delay","data","characters","map","actor","i","language","includes","push","console","log","err","character","name","image_url"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport delayAdapterEnhancer from 'axios-delay';\r\n\r\nconst Cast = ({id}) => {\r\n\r\n    let url = `https://api.jikan.moe/v3/anime/${id}/characters_staff`;\r\n\r\n    const [cast, setCast] = useState([]);\r\n    const [actors, setActors] = useState([]);\r\n    const [actorsImage, setActorsImage] = useState([]);\r\n\r\n\r\n\r\n\r\n    const api = axios.create({\r\n        adapter: delayAdapterEnhancer(axios.defaults.adapter)\r\n      });\r\n\r\n      let cancelToken;\r\n\r\n    useEffect(()=>{\r\n        (async function()\r\n        {\r\n            try\r\n            {\r\n                if (typeof cancelToken != typeof undefined) cancelToken.cancel(\"Canceling previous req\");\r\n                cancelToken = axios.CancelToken.source();\r\n\r\n                const res = await api.get(url, {cancelToken: cancelToken.token, delay: 8000});\r\n                setCast(res.data.characters);\r\n                res.data.characters.map((actor, i)=>actor.language.includes(\"Japanese\") ? actors.push(actor) : (null));\r\n                console.log(res.data);\r\n            }\r\n            catch(err)\r\n            {\r\n                console.log(err);\r\n            }\r\n        })();\r\n    }, [url]);\r\n\r\n    return (\r\n        <div className='cast'>\r\n            {cast.map((character, i)=>\r\n            <div key={i} className='character-row'>\r\n                <div className=\"character-box\">\r\n                    <div className='character-name'><strong>{character.name}</strong></div>\r\n                    <div className='character-pic'><img src={character.image_url} alt=\"character-pic\"></img></div>\r\n                </div>\r\n\r\n                    {actors.map((actor, i) =>\r\n                    <div className=\"actor-box\">\r\n                        <div key={i} className='actor-name'>{actors.name}</div>\r\n                        <div className='actor-pic'><img src={actors.image_url} alt=\"actor-pic\"></img></div>\r\n                    </div>\r\n                    )}\r\n\r\n\r\n            </div>)}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cast;\r\n"]},"metadata":{},"sourceType":"module"}