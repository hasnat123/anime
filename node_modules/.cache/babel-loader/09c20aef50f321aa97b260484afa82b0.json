{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web dev\\\\practiceReact\\\\anime\\\\src\\\\Rating.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rating = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  let url = `https://api.jikan.moe/v3/anime/${id}/stats`;\n  const [ratings, setRatings] = useState([]);\n  const [score, setScore] = useState(0);\n  const [watching, setWatching] = useState(0);\n  const [watched, setWatched] = useState(0);\n  const [dropped, setDropped] = useState(0);\n  useEffect(() => {\n    (async function () {\n      try {\n        const res = await axios.get(url);\n        setWatching(res.data.watching);\n        setRatings(Object.values(res.data.scores)); //Converting object into array so that 'map' function can be applied\n\n        console.log(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [url]);\n  useEffect(() => {\n    (async function () {\n      let mult;\n      var sum;\n\n      try {\n        if (ratings.length > 0) {\n          mult = 0;\n          sum = 0;\n          ratings.forEach((rating, i) => {\n            mult += rating.votes * (i + 1);\n            sum += rating.votes;\n          });\n          setScore(mult / sum);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [ratings]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [watching, score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ratings-list\",\n      children: ratings.map((rating, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-number\",\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-percentage\",\n            children: [rating.percentage, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 51\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Rating, \"VUCvxS+nJnSI3ukajCk20z+gRbk=\");\n\n_c = Rating;\nexport default Rating;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"sources":["C:/Web dev/practiceReact/anime/src/Rating.js"],"names":["React","useState","useEffect","axios","Rating","id","url","ratings","setRatings","score","setScore","watching","setWatching","watched","setWatched","dropped","setDropped","res","get","data","Object","values","scores","console","log","err","mult","sum","length","forEach","rating","i","votes","map","percentage"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\n\r\nconst Rating = ({id}) => {\r\n    let url=`https://api.jikan.moe/v3/anime/${id}/stats`;\r\n\r\n    const [ratings, setRatings] = useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const [watching, setWatching] = useState(0);\r\n    const [watched, setWatched] = useState(0);\r\n    const [dropped, setDropped] = useState(0);\r\n\r\n\r\n    useEffect(() =>\r\n    {\r\n        (async function()\r\n        {\r\n\r\n            try{\r\n                const res = await axios.get(url);\r\n                setWatching(res.data.watching);\r\n                setRatings(Object.values(res.data.scores)); //Converting object into array so that 'map' function can be applied\r\n                console.log(res.data);\r\n\r\n                \r\n            }\r\n            catch(err)\r\n            {\r\n                console.log(err);\r\n            }\r\n\r\n        })();\r\n    }, [url])\r\n\r\n    useEffect(() =>\r\n    {\r\n        (async function()\r\n        {\r\n            let mult;\r\n            var sum;\r\n            try{\r\n                if(ratings.length > 0)\r\n                {\r\n                    mult = 0;\r\n                    sum = 0;\r\n                    ratings.forEach((rating, i)=>{mult += (rating.votes*(i+1)); sum += rating.votes;});\r\n                    setScore(mult/sum);\r\n                }\r\n\r\n            }\r\n            catch(err)\r\n            {\r\n                console.log(err);\r\n            }\r\n\r\n        })();\r\n    }, [ratings])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"score\">\r\n                {watching}\r\n                {score}\r\n            </div>\r\n            <div className=\"ratings-list\">\r\n                {ratings.map((rating, i)=>{return <div key={i} className=\"rating\">\r\n                    <div className=\"rating-number\">{i+1}</div>\r\n                    <div className=\"rating-percentage\">{rating.percentage} %</div>\r\n                </div>})}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Rating;\r\n"]},"metadata":{},"sourceType":"module"}