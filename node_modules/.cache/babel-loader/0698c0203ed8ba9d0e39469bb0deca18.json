{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web dev\\\\practiceReact\\\\anime\\\\src\\\\Rating.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rating = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  let url = `https://api.jikan.moe/v3/anime/${id}/stats`;\n  const [ratings, setRatings] = useState([]);\n  const [score, setScore] = useState();\n  var sum = 0;\n  useEffect(() => {\n    (async function () {\n      try {\n        const res = await axios.get(url);\n        setRatings(Object.values(res.data.scores)); //Converting object into array so that 'map' function can be applied\n\n        console.log(res.data);\n\n        const average = function () {\n          ratings.forEach(rating => {\n            sum += rating.votes;\n          });\n          setScore(sum);\n        };\n\n        average();\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-list\",\n      children: ratings.map((rating, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-number\",\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-percentage\",\n            children: [rating.percentage, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 51\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Rating, \"CvgKaFJBck/vBIWtjSf5TsyWcDI=\");\n\n_c = Rating;\nexport default Rating;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"sources":["C:/Web dev/practiceReact/anime/src/Rating.js"],"names":["React","useState","useEffect","axios","Rating","id","url","ratings","setRatings","score","setScore","sum","res","get","Object","values","data","scores","console","log","average","forEach","rating","votes","err","map","i","percentage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,QAAU;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AACrB,MAAIC,GAAG,GAAE,kCAAiCD,EAAG,QAA7C;AAEA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AACA,MAAIU,GAAG,GAAG,CAAV;AAEAT,EAAAA,SAAS,CAAC,MACV;AACI,KAAC,kBACD;AAEI,UAAG;AACC,cAAMU,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUP,GAAV,CAAlB;AACAE,QAAAA,UAAU,CAACM,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACI,IAAJ,CAASC,MAAvB,CAAD,CAAV,CAFD,CAE6C;;AAC5CC,QAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACI,IAAhB;;AAEA,cAAMI,OAAO,GAAG,YAChB;AAEIb,UAAAA,OAAO,CAACc,OAAR,CAAiBC,MAAD,IAAU;AAACX,YAAAA,GAAG,IAAIW,MAAM,CAACC,KAAd;AAAqB,WAAhD;AACAb,UAAAA,QAAQ,CAACC,GAAD,CAAR;AACH,SALD;;AAMAS,QAAAA,OAAO;AACV,OAZD,CAaA,OAAMI,GAAN,EACA;AACIN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACH;AAEJ,KArBD;AAsBH,GAxBQ,EAwBN,CAAClB,GAAD,CAxBM,CAAT;AA0BA,sBACI;AAAA,4BACI;AAAA,gBACKG;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACKF,OAAO,CAACkB,GAAR,CAAY,CAACH,MAAD,EAASI,CAAT,KAAa;AAAC,4BAAO;AAAa,UAAA,SAAS,EAAC,QAAvB;AAAA,kCAC9B;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBAAgCA,CAAC,GAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAD8B,eAE9B;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,uBAAoCJ,MAAM,CAACK,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAF8B;AAAA,WAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGpB,OAHN;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA/CD;;GAAMtB,M;;KAAAA,M;AAiDN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\n\r\nconst Rating = ({id}) => {\r\n    let url=`https://api.jikan.moe/v3/anime/${id}/stats`;\r\n\r\n    const [ratings, setRatings] = useState([]);\r\n    const [score, setScore] = useState();\r\n    var sum = 0;\r\n\r\n    useEffect(() =>\r\n    {\r\n        (async function()\r\n        {\r\n\r\n            try{\r\n                const res = await axios.get(url);\r\n                setRatings(Object.values(res.data.scores)); //Converting object into array so that 'map' function can be applied\r\n                console.log(res.data);\r\n\r\n                const average = function()\r\n                {\r\n                     \r\n                    ratings.forEach((rating)=>{sum += rating.votes;})\r\n                    setScore(sum);\r\n                }\r\n                average();\r\n            }\r\n            catch(err)\r\n            {\r\n                console.log(err);\r\n            }\r\n\r\n        })();\r\n    }, [url])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {score}\r\n            </div>\r\n            <div className=\"rating-list\">\r\n                {ratings.map((rating, i)=>{return <div key={i} className=\"rating\">\r\n                    <div className=\"rating-number\">{i+1}</div>\r\n                    <div className=\"rating-percentage\">{rating.percentage} %</div>\r\n                </div>})}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Rating;\r\n"]},"metadata":{},"sourceType":"module"}